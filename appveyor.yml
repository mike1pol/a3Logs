version: "{build}"
image:
  - Windows Server 2012 R2
  - Ubuntu
platform:
  - x64
  - x86

branches:
  only:
    - master

for:
  -
    matrix:
      only:
        - platform: x64
          image: Ubuntu
    clone_folder: /go/src/github.com/mike1pol/a3Logs
    install:
      - sh: sudo apt update
      - sh: sudo apt install -y curl build-essential
      - sh: curl -O https://dl.google.com/go/go1.11.1.linux-amd64.tar.gz
      - sh: sudo tar -C /usr/local -xzf go1.11.1.linux-amd64.tar.gz
    environment:
      PATH: $PATH:/usr/local/go/bin
      GOPATH: /go
      GOOS: linux
      GOARCH: amd64
    build_script:
      - go build -o a3Logs_x64.so -buildmode=c-shared .
    artifacts:
      - path: a3Logs_x64.so
        name: binary
  -
    matrix:
      only:
        - platform: x86
          image: Ubuntu
    clone_folder: /go/src/github.com/mike1pol/a3Logs
    install:
      - sh: sudo apt update
      - sh: sudo apt install -y curl build-essential
      - sh: curl -O https://dl.google.com/go/go1.11.1.linux-386.tar.gz
      - sh: sudo tar -C /usr/local -xzf go1.11.1.linux-386.tar.gz
    environment:
      PATH: $PATH:/usr/local/go/bin
      GOPATH: /go
      GOOS: linux
      GOARCH: 386
    build_script:
      - go build -o a3Logs.so -buildmode=c-shared .
    artifacts:
      - path: a3Logs.so
        name: binary
  -
    matrix:
      only:
        - platform: x64
          image: Windows Server 2012 R2
    clone_folder: c:\gopath\src\github.com\mike1pol\a3Logs
    install:
      - ps: >-
          if (-Not (Test-Path "$pwd/build/tdm64-cpp.tar.lzma")) {
            echo "TDM-GCC64 not found on build/, downloading..."
            md -Force build | Out-Null
            md -Force C:/tools/tdm64 | Out-Null
            echo "Downloading tdm64-core..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/TDM-GCC%205%20series/5.1.0-tdm64-1/gcc-5.1.0-tdm64-1-core.tar.lzma", "$pwd/build/tdm64-core.tar.lzma")
            echo "Downloading tdm64-binutils..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/GNU%20binutils/binutils-2.25-tdm64-1.tar.lzma", "$pwd/build/tdm64-binutils.tar.lzma")
            echo "Downloading tdm64-mingw64runtime..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/MinGW-w64%20runtime/GCC%205%20series/mingw64runtime-v4-git20150618-gcc5-tdm64-1.tar.lzma", "$pwd/build/tdm64-mingw64runtime.tar.lzma")
            echo "Downloading tdm64-cpp..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/TDM-GCC%205%20series/5.1.0-tdm64-1/gcc-5.1.0-tdm64-1-c%2B%2B.tar.lzma", "$pwd/build/tdm64-cpp.tar.lzma")
          }
      - 7z x "%cd%/build/tdm64-core.tar.lzma" -y "-o%cd%/build" >nul
      - 7z x "%cd%/build/tdm64-core.tar" -y "-oC:/tools/tdm64" >nul
      - 7z x "%cd%/build/tdm64-binutils.tar.lzma" -y "-o%cd%/build" >nul
      - 7z x "%cd%/build/tdm64-binutils.tar" -y "-oC:/tools/tdm64" >nul
      - 7z x "%cd%/build/tdm64-mingw64runtime.tar.lzma" -y "-o%cd%/build" >nul
      - 7z x "%cd%/build/tdm64-mingw64runtime.tar" -y "-oC:/tools/tdm64" >nul
      - 7z x "%cd%/build/tdm64-cpp.tar.lzma" -y "-o%cd%/build" >nul
      - 7z x "%cd%/build/tdm64-cpp.tar" -y "-oC:/tools/tdm64" >nul
      - ps: echo "@echo off`nC:\MinGW\bin\mingw32-make.exe %*" | Out-File -Encoding ascii "C:/tools/tdm64/bin/mingw32-make.bat"
      - ps: $env:Path = "C:/tools/tdm64/bin;" + $env:Path
      - msbuild /version
      - g++ --version
      - mingw32-make --version
      - echo CPU Count is %number_of_processors%
      - rmdir c:\go /s /q
      - appveyor DownloadFile https://storage.googleapis.com/golang/go1.11.windows-amd64.zip
      - 7z x go1.11.windows-amd64.zip -y -oC:\ > NUL
      - set PATH=%PATH%;%GOPATH%\bin\windows_%GOARCH%;%GOPATH%\bin
      - echo %PATH%
      - echo %GOPATH%
      - go version
      - go env
      - go get -v -t ./...
    environment:
      GOPATH: c:\gopath
      GOOS: windows
      GOARCH: amd64
    build_script:
      - go build -o a3Logs_x64.dll -buildmode=c-shared .
    artifacts:
      - path: a3Logs_x64.dll
        name: binary
  -
    matrix:
      only:
        - platform: x86
          image: Windows Server 2012 R2
    clone_folder: c:\gopath\src\github.com\mike1pol\a3Logs
    install:
      - ps: >-
          if (-Not (Test-Path "$pwd/build/tdm64-cpp.tar.lzma")) {
            echo "TDM-GCC64 not found on build/, downloading..."
            md -Force build | Out-Null
            md -Force C:/tools/tdm64 | Out-Null
            echo "Downloading tdm64-core..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/TDM-GCC%205%20series/5.1.0-tdm64-1/gcc-5.1.0-tdm64-1-core.tar.lzma", "$pwd/build/tdm64-core.tar.lzma")
            echo "Downloading tdm64-binutils..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/GNU%20binutils/binutils-2.25-tdm64-1.tar.lzma", "$pwd/build/tdm64-binutils.tar.lzma")
            echo "Downloading tdm64-mingw64runtime..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/MinGW-w64%20runtime/GCC%205%20series/mingw64runtime-v4-git20150618-gcc5-tdm64-1.tar.lzma", "$pwd/build/tdm64-mingw64runtime.tar.lzma")
            echo "Downloading tdm64-cpp..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/TDM-GCC%205%20series/5.1.0-tdm64-1/gcc-5.1.0-tdm64-1-c%2B%2B.tar.lzma", "$pwd/build/tdm64-cpp.tar.lzma")
          }
      - 7z x "%cd%/build/tdm64-core.tar.lzma" -y "-o%cd%/build" >nul
      - 7z x "%cd%/build/tdm64-core.tar" -y "-oC:/tools/tdm64" >nul
      - 7z x "%cd%/build/tdm64-binutils.tar.lzma" -y "-o%cd%/build" >nul
      - 7z x "%cd%/build/tdm64-binutils.tar" -y "-oC:/tools/tdm64" >nul
      - 7z x "%cd%/build/tdm64-mingw64runtime.tar.lzma" -y "-o%cd%/build" >nul
      - 7z x "%cd%/build/tdm64-mingw64runtime.tar" -y "-oC:/tools/tdm64" >nul
      - 7z x "%cd%/build/tdm64-cpp.tar.lzma" -y "-o%cd%/build" >nul
      - 7z x "%cd%/build/tdm64-cpp.tar" -y "-oC:/tools/tdm64" >nul
      - ps: echo "@echo off`nC:\MinGW\bin\mingw32-make.exe %*" | Out-File -Encoding ascii "C:/tools/tdm64/bin/mingw32-make.bat"
      - ps: $env:Path = "C:/tools/tdm64/bin;" + $env:Path
      - msbuild /version
      - g++ --version
      - mingw32-make --version
      - echo CPU Count is %number_of_processors%
      - rmdir c:\go /s /q
      - appveyor DownloadFile https://storage.googleapis.com/golang/go1.11.windows-386.zip
      - 7z x go1.11.windows-386.zip -y -oC:\ > NUL
      - set PATH=%PATH%;%GOPATH%\bin\windows_%GOARCH%;%GOPATH%\bin
      - echo %PATH%
      - echo %GOPATH%
      - go version
      - go env
      - go get -v -t ./...
    environment:
      GOPATH: c:\gopath
      GOOS: windows
      GOARCH: 386
    build_script:
      - go build -o a3Logs.dll -buildmode=c-shared .
    artifacts:
      - path: a3Logs.dll
        name: binary

test: off

deploy:
  release: v0.0.1-$(appveyor_build_version)
  description: 'Autobuild'
  provider: GitHub
  auth_token:
    secure: oWzmrBr2aISJfqcr8c4FFjdwSDxJoSmucdBLp3S1OOv5/GuTQk29KS4j+l/MlV7i
  artifact: binary
  draft: false
  prerelease: false
  on:
    branch: master
